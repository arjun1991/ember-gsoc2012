//
// C++ Interface: AdapterBase
//
// Description: 
//
//
// Author: Erik Hjortsberg <erik.hjortsberg@gmail.com>, (C) 2007
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.//
//

$#include "../../AdapterBase.h"

namespace Ember {
namespace OgreView {

namespace Gui {

namespace Adapters {

namespace Atlas {

/**
	@author Erik Hjortsberg <erik.hjortsberg@gmail.com>
*/
class AdapterBase{
public:
    AdapterBase(const Atlas::Message::Element& element);

    virtual ~AdapterBase();
	
	
	/**
	Sets the value, thus also updating the gui.
	*/
	void setValue(Atlas::Message::Element& element);

	Atlas::Message::Element& getValue();
	const Atlas::Message::Element& getOriginalValue() const;
	
	/**
	Emitted when the value has been changed from a gui update.
	*/
	sigc::signal<void> EventValueChanged;
	
	/**
	Updates the gui with new values.
	*/
	virtual void updateGui(const Atlas::Message::Element& element) = 0;
	
	bool hasChanges();
	void remove();
	bool isRemoved() const;
	
	virtual void addSuggestion(const std::string& suggestedValue);
};

}

}

}
}
}