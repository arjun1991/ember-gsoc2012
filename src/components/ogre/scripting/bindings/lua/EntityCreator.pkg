//
// C++ Interface: EntityCreator
//
// Description: 
//
//
// Author: Alexey Torkhov <atorkhov@gmail.com>, (C) 2008
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.//
//

$#include "components/ogre/widgets/EntityCreator.h"

namespace Ember {
namespace OgreView {

namespace Gui {

class EntityCreator{
public:
	EntityCreator(Ember::OgreView::World& world);
	~EntityCreator();
	void setRecipe(Ember::OgreView::Authoring::EntityRecipe& recipe);
	void toggleCreateMode();
	/**
	 * @brief Sets whether to randomize the orientation of all new entities.
	 * If set, all new entities will have their orientation randomized along the vertical axis.
	 * @param randomize Whether to randomize the orientation or not.
	 */
	void setRandomizeOrientation(bool randomize);

	/**
	* @brief Emitted when all needed type info for the current recipe is loaded.
	*/
	sigc::signal<void> EventTypeInfoLoaded;

	/**
	 * @brief Emitted when creation has started.
	 */
	sigc::signal<void> EventCreationStarted;

	/**
	 * @brief Emitted when creation has ended.
	 */
	sigc::signal<void> EventCreationEnded;

};

}
}
}