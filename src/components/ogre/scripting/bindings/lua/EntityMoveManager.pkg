//
// C++ Interface: EntityMoveManager
//
// Description: 
//
//
// Author: Erik Hjortsberg <erik.hjortsberg@gmail.com>, (C) 2006
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation; either version 2 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
// 
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.//
//


namespace Ember {
namespace OgreView {

namespace Authoring {
class EntityMover;
class EntityMoveManager
{
public:

	void startMove(EmberEntity& entity);
	
	/**
	 *    Reimplements the ConsoleObject::runCommand method
	 * @param command 
	 * @param args 
	 */
	virtual	void runCommand(const std::string &command, const std::string &args);
	
	/**
	* Emitted when the movement of an entity starts
	*/
	sigc::signal<void, EmberEntity&, EntityMover&> EventStartMoving;
	
	/**
	* Emitted when the movement of an entity has finished.
	*/
	sigc::signal<void> EventFinishedMoving;
	
	/**
	* Emitted when the movement of an entity has been cancelled.
	*/
	sigc::signal<void> EventCancelledMoving;


};

}
}
}