/*
 Copyright (C) 2009 Erik Hjortsberg

 This program is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
 */

$#include "components/ogre/widgets/adapters/eris/TypeTreeAdapter.h"

namespace Ember
{
namespace OgreView
{

namespace Gui
{

namespace Adapters
{

namespace Eris
{
/**
 * @author Erik Hjortsberg <erik.hjortsberg@gmail.com>
 * @brief An adapter which binds an eris type tree to a cegui tree widget.
 *
 * Make sure to call initialize() to activate the adapter.
 */
class TypeTreeAdapter: public virtual sigc::trackable
{
public:
	TypeTreeAdapter(Eris::TypeService& typeService, CEGUI::Tree& treeWidget);

	virtual ~TypeTreeAdapter();

	/**
	 * @brief Initializes the adapter, creating initial type tree and hooking up listening for new types as they arrive.
	 * @param rootTypeName The name of the root type.
	 * @returns True if the root type was found.
	 */
	bool initialize(const std::string& rootTypeName);

	/**
	 * @brief Gets the currently selected type, if any.
	 * @returns The currently selected type, if any.
	 */
	Eris::TypeInfo* getSelectedTypeInfo();


};

}
}
}
}
}