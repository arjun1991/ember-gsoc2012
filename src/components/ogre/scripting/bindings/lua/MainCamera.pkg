
namespace Ember {
namespace OgreView {
namespace Camera {
class MainCamera
{
public:

	/**
	 * @brief Accessor for the main Ogre::Camera instance.
	 * @return The main Ogre::Camera instance.
	 */
	Ogre::Camera& getCamera() const;


	/**
	 * @brief Returns the current camera orientation in the world
	 * @param onlyHorizontal
	 * @return
	 */
	const Ogre::Quaternion& getOrientation(bool onlyHorizontal) const;

	/**
	 * @brief Returns the position of the camera in the world.
	 * @return
	 */
	const Ogre::Vector3& getPosition() const;


	/**
	* @brief Emitted when the camera moves
	*/
	sigc::signal<void, Ogre::Camera&> MovedCamera;


	void setClosestPickingDistance(float distance);

	float getClosestPickingDistance() const;

	/**
	 *    Enables and disables a compositor by name.
	 * @param compositorName
	 * @param enable
	 */
	void enableCompositor(const std::string& compositorName, bool enable);



};
}
}
}